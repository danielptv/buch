# Copyright (C) 2022 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# #it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# kubectl logs mysql-0 --namespace acme

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  serviceName: {{ .Release.Name }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      app.kubernetes.io/name: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      containers:
        - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          name: {{ .Release.Name }}
          imagePullPolicy: Always
          #imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-env
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: password
          ports:
            - containerPort: 3306
              name: {{ .Release.Name }}
          securityContext:
            # mysql
            runAsUser: 999
            runAsGroup: 999
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            seLinuxOptions: {}
            capabilities:
              drop: [ALL]
          resources:
            requests:
              cpu: {{ .Values.resourcesRequests.cpu }}
              memory: {{ .Values.resourcesRequests.memory }}
              ephemeral-storage: {{ .Values.resourcesRequests.ephemeral }}
            limits:
              cpu: {{ .Values.resourcesLimits.cpu }}
              memory: {{ .Values.resourcesLimits.memory }}
              ephemeral-storage: {{ .Values.resourcesLimits.ephemeral }}

          livenessProbe:
            exec:
              command: ["sh", "-c", "mysqladmin --user=root --password=p --host=mysql-0 ping"]
            initialDelaySeconds: {{ .Values.liveness.initialDelay }}
            timeoutSeconds: {{ .Values.liveness.timeout }}
            periodSeconds: {{ .Values.liveness.period }}
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            terminationGracePeriodSeconds: 5
          readinessProbe:
            exec:
              command: [ "sh", "-c", "mysqladmin --user=root --password=p --host=mysql-0 ping" ]
            initialDelaySeconds: {{ .Values.readiness.initialDelay }}
            timeoutSeconds: {{ .Values.readiness.timeout }}
            periodSeconds: {{ .Values.readiness.period }}
            failureThreshold: {{ .Values.readiness.failureThreshold }}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-db-volume
            - mountPath: /tmp
              name: mysql-tmp-volume
            - mountPath: /var/run/mysqld
              name: mysql-mysqld-volume
      volumes:
        - name: mysql-db-volume
          persistentVolumeClaim:
            claimName: mysql-db-volume-mysql-0
        - name: mysql-tmp-volume
          persistentVolumeClaim:
            claimName: mysql-tmp-volume-mysql-0
        - name: mysql-mysqld-volume
          persistentVolumeClaim:
            claimName: mysql-mysqld-volume-mysql-0
      serviceAccountName: acme-mysql
      automountServiceAccountToken: false
  volumeClaimTemplates:
    - metadata:
        name: mysql-db-volume
        labels:
          app: mysql-db
          app.kubernetes.io/name: mysql-db
        finalizers: []
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 2Gi
        storageClassName: manual
    - metadata:
        name: mysql-tmp-volume
        labels:
          app: mysql-tmp
          app.kubernetes.io/name: mysql-tmp
        finalizers: []
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 128Ki
        storageClassName: manual
    - metadata:
        name: mysql-mysqld-volume
        labels:
          app: mysql-mysqld
          app.kubernetes.io/name: mysql-mysqld
        finalizers: []
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 256Ki
        storageClassName: manual
